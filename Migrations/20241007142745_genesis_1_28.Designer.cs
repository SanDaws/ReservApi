// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ReservApi.Data;

#nullable disable

namespace ReservApi.Migrations
{
    [DbContext(typeof(ReserverDbContext))]
    [Migration("20241007142745_genesis_1_28")]
    partial class genesis_1_28
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("ReservApi.Models.Booking", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<uint>("Id"));

                    b.Property<DateTime>("CheckInDAte")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("start_date");

                    b.Property<DateTime>("CheckOutDAte")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("end_date");

                    b.Property<DateOnly>("DateStamp")
                        .HasColumnType("date")
                        .HasColumnName("creation_ate");

                    b.Property<uint>("EmployeeID")
                        .HasColumnType("int unsigned")
                        .HasColumnName("employee_id");

                    b.Property<uint>("GuestID")
                        .HasColumnType("int unsigned")
                        .HasColumnName("guest_id");

                    b.Property<DateOnly>("LastUpdate")
                        .HasColumnType("date")
                        .HasColumnName("last_update");

                    b.Property<uint>("RoomID")
                        .HasColumnType("int unsigned")
                        .HasColumnName("room_id");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeID");

                    b.HasIndex("GuestID");

                    b.HasIndex("RoomID");

                    b.ToTable("bookings");
                });

            modelBuilder.Entity("ReservApi.Models.Employee", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<uint>("Id"));

                    b.Property<DateOnly>("DateStamp")
                        .HasColumnType("date")
                        .HasColumnName("creation_ate");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("first_name");

                    b.Property<string>("IdNumer")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("identification_number");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("last_name");

                    b.Property<DateOnly>("LastUpdate")
                        .HasColumnType("date")
                        .HasColumnName("last_update");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("password");

                    b.HasKey("Id");

                    b.HasIndex("IdNumer")
                        .IsUnique();

                    b.ToTable("employees");

                    b.HasData(
                        new
                        {
                            Id = 1u,
                            DateStamp = new DateOnly(2024, 10, 7),
                            Email = "urregue@reserve.com",
                            FirstName = "pablo",
                            IdNumer = "12456783344",
                            LastName = "Urregue",
                            LastUpdate = new DateOnly(2024, 10, 7),
                            Password = "d815be3e37bcc366211f145014be8fb0498171acd5a0a00c2184cffa6c3fd0c3"
                        },
                        new
                        {
                            Id = 2u,
                            DateStamp = new DateOnly(2024, 10, 7),
                            Email = "laura.g@reserve.com",
                            FirstName = "Laura",
                            IdNumer = "98765432100",
                            LastName = "Gonzalez",
                            LastUpdate = new DateOnly(2024, 10, 7),
                            Password = "3c9e5983068ffdc39f2badfe7712dd21c3cd0b537c72716b463cc19f041842de"
                        },
                        new
                        {
                            Id = 3u,
                            DateStamp = new DateOnly(2024, 10, 7),
                            Email = "carlos.m@reserve.com",
                            FirstName = "Carlos",
                            IdNumer = "32165498700",
                            LastName = "Martinez",
                            LastUpdate = new DateOnly(2024, 10, 7),
                            Password = "39bde86e1977224bf7f03caf43f6204bfc8d4aeb5caa0768bc643ed34478f700"
                        },
                        new
                        {
                            Id = 4u,
                            DateStamp = new DateOnly(2024, 10, 7),
                            Email = "sofia.r@reserve.com",
                            FirstName = "Sofia",
                            IdNumer = "45612378901",
                            LastName = "Ramirez",
                            LastUpdate = new DateOnly(2024, 10, 7),
                            Password = "4b18c6ba678dbe972a4c40a839a098c6736f5778c013bd3b3f25fc4a306aace3"
                        },
                        new
                        {
                            Id = 5u,
                            DateStamp = new DateOnly(2024, 10, 7),
                            Email = "javier.h@reserve.com",
                            FirstName = "Javier",
                            IdNumer = "15975348620",
                            LastName = "Hernandez",
                            LastUpdate = new DateOnly(2024, 10, 7),
                            Password = "e11da32d8b69eab9a78e748cdb6433091a1843a0e1a321709627977b9a07ea39"
                        },
                        new
                        {
                            Id = 6u,
                            DateStamp = new DateOnly(2024, 10, 7),
                            Email = "ana.l@reserve.com",
                            FirstName = "Ana",
                            IdNumer = "75315948623",
                            LastName = "Lopez",
                            LastUpdate = new DateOnly(2024, 10, 7),
                            Password = "94f6bfb33224c66c81648579ada56c96e4f7c5eeb6588c6b3c7a4934168208e8"
                        },
                        new
                        {
                            Id = 7u,
                            DateStamp = new DateOnly(2024, 10, 7),
                            Email = "miguel.t@reserve.com",
                            FirstName = "Miguel",
                            IdNumer = "85296374120",
                            LastName = "Torres",
                            LastUpdate = new DateOnly(2024, 10, 7),
                            Password = "0635ce1702f31561042eec7c294c7bf03b8d51ec6525ee61c7ed372014d97db7"
                        },
                        new
                        {
                            Id = 8u,
                            DateStamp = new DateOnly(2024, 10, 7),
                            Email = "isabel.f@reserve.com",
                            FirstName = "Isabel",
                            IdNumer = "36925814700",
                            LastName = "Fernandez",
                            LastUpdate = new DateOnly(2024, 10, 7),
                            Password = "b471507e826b8e9fffa77c29cfcc65381405715616657022820f2ebce700268a"
                        },
                        new
                        {
                            Id = 9u,
                            DateStamp = new DateOnly(2024, 10, 7),
                            Email = "diego.c@reserve.com",
                            FirstName = "Diego",
                            IdNumer = "14785236900",
                            LastName = "Castro",
                            LastUpdate = new DateOnly(2024, 10, 7),
                            Password = "898fc103f32a84035e4d08fe9de6f7b7b6eb2a8ae8fe55c189bdb3732e76dfa5"
                        });
                });

            modelBuilder.Entity("ReservApi.Models.Guest", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<uint>("Id"));

                    b.Property<DateOnly?>("Birthdate")
                        .HasColumnType("date")
                        .HasColumnName("birth_day");

                    b.Property<DateOnly>("DateStamp")
                        .HasColumnType("date")
                        .HasColumnName("creation_ate");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("first_name");

                    b.Property<string>("IdNumer")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("identification_number");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("last_name");

                    b.Property<DateOnly>("LastUpdate")
                        .HasColumnType("date")
                        .HasColumnName("last_update");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("phone_number");

                    b.HasKey("Id");

                    b.HasIndex("IdNumer")
                        .IsUnique();

                    b.ToTable("guests");

                    b.HasData(
                        new
                        {
                            Id = 1u,
                            Birthdate = new DateOnly(2014, 12, 1),
                            DateStamp = new DateOnly(2024, 10, 7),
                            Email = "urregue@reserve.com",
                            FirstName = "pablo",
                            IdNumer = "12456783344",
                            LastName = "Urregue",
                            LastUpdate = new DateOnly(2024, 10, 7),
                            Phone = "+52 3122321246"
                        },
                        new
                        {
                            Id = 2u,
                            Birthdate = new DateOnly(1990, 5, 15),
                            DateStamp = new DateOnly(2024, 10, 7),
                            Email = "laura.g@reserve.com",
                            FirstName = "Laura",
                            IdNumer = "98765432100",
                            LastName = "Gonzalez",
                            LastUpdate = new DateOnly(2024, 10, 7),
                            Phone = "+52 3122321247"
                        },
                        new
                        {
                            Id = 3u,
                            Birthdate = new DateOnly(1985, 8, 22),
                            DateStamp = new DateOnly(2024, 10, 7),
                            Email = "carlos.m@reserve.com",
                            FirstName = "Carlos",
                            IdNumer = "32165498700",
                            LastName = "Martinez",
                            LastUpdate = new DateOnly(2024, 10, 7),
                            Phone = "+52 3122321248"
                        },
                        new
                        {
                            Id = 4u,
                            Birthdate = new DateOnly(2000, 2, 10),
                            DateStamp = new DateOnly(2024, 10, 7),
                            Email = "sofia.r@reserve.com",
                            FirstName = "Sofia",
                            IdNumer = "45612378901",
                            LastName = "Ramirez",
                            LastUpdate = new DateOnly(2024, 10, 7),
                            Phone = "+52 3122321249"
                        },
                        new
                        {
                            Id = 5u,
                            Birthdate = new DateOnly(1975, 11, 30),
                            DateStamp = new DateOnly(2024, 10, 7),
                            Email = "javier.h@reserve.com",
                            FirstName = "Javier",
                            IdNumer = "15975348620",
                            LastName = "Hernandez",
                            LastUpdate = new DateOnly(2024, 10, 7),
                            Phone = "+52 3122321250"
                        },
                        new
                        {
                            Id = 6u,
                            Birthdate = new DateOnly(1995, 4, 5),
                            DateStamp = new DateOnly(2024, 10, 7),
                            Email = "ana.l@reserve.com",
                            FirstName = "Ana",
                            IdNumer = "75315948623",
                            LastName = "Lopez",
                            LastUpdate = new DateOnly(2024, 10, 7),
                            Phone = "+52 3122321251"
                        },
                        new
                        {
                            Id = 7u,
                            Birthdate = new DateOnly(1980, 7, 19),
                            DateStamp = new DateOnly(2024, 10, 7),
                            Email = "miguel.t@reserve.com",
                            FirstName = "Miguel",
                            IdNumer = "85296374120",
                            LastName = "Torres",
                            LastUpdate = new DateOnly(2024, 10, 7),
                            Phone = "+52 3122321252"
                        },
                        new
                        {
                            Id = 8u,
                            Birthdate = new DateOnly(1992, 1, 25),
                            DateStamp = new DateOnly(2024, 10, 7),
                            Email = "isabel.f@reserve.com",
                            FirstName = "Isabel",
                            IdNumer = "36925814700",
                            LastName = "Fernandez",
                            LastUpdate = new DateOnly(2024, 10, 7),
                            Phone = "+52 3122321253"
                        },
                        new
                        {
                            Id = 9u,
                            Birthdate = new DateOnly(1988, 9, 12),
                            DateStamp = new DateOnly(2024, 10, 7),
                            Email = "diego.c@reserve.com",
                            FirstName = "Diego",
                            IdNumer = "14785236900",
                            LastName = "Castro",
                            LastUpdate = new DateOnly(2024, 10, 7),
                            Phone = "+52 3122321254"
                        });
                });

            modelBuilder.Entity("ReservApi.Models.Room", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<uint>("Id"));

                    b.Property<bool>("Avaliability")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("avaliability");

                    b.Property<byte>("Capasity")
                        .HasColumnType("tinyint unsigned")
                        .HasColumnName("max_occupancy_persons");

                    b.Property<double>("PricePernight")
                        .HasColumnType("double")
                        .HasColumnName("price_per_night");

                    b.Property<string>("RoomNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("room_number");

                    b.Property<uint>("RoomTypeID")
                        .HasColumnType("int unsigned")
                        .HasColumnName("room_type_id");

                    b.HasKey("Id");

                    b.HasIndex("RoomTypeID");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("ReservApi.Models.RoomType", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<uint>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("longtext")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("room_types");

                    b.HasData(
                        new
                        {
                            Id = 1u,
                            Description = "Una acogedora habitación básica con una cama individual, ideal para viajeros solos",
                            Name = "habitacion simple"
                        },
                        new
                        {
                            Id = 2u,
                            Description = "ofrece flexibilidad con dos camas individuales o una cama doble, perfecta para parejas o amigos",
                            Name = "habitacion DOBLE"
                        },
                        new
                        {
                            Id = 3u,
                            Description = "espaciosa y lujosa, con una cama king size y una sala de estar separada, ideal para quienes buscan confort y exclusividad",
                            Name = "suite"
                        },
                        new
                        {
                            Id = 4u,
                            Description = "diseñada para familias, con espacio adicional y varias camas para una estancia cómoda",
                            Name = "habitacion Familiar"
                        });
                });

            modelBuilder.Entity("ReservApi.Models.Booking", b =>
                {
                    b.HasOne("ReservApi.Models.Employee", "EmployeeFK")
                        .WithMany()
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ReservApi.Models.Guest", "GuestFK")
                        .WithMany()
                        .HasForeignKey("GuestID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ReservApi.Models.Room", "RoomFk")
                        .WithMany()
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmployeeFK");

                    b.Navigation("GuestFK");

                    b.Navigation("RoomFk");
                });

            modelBuilder.Entity("ReservApi.Models.Room", b =>
                {
                    b.HasOne("ReservApi.Models.RoomType", "RoomTypeFK")
                        .WithMany()
                        .HasForeignKey("RoomTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RoomTypeFK");
                });
#pragma warning restore 612, 618
        }
    }
}
